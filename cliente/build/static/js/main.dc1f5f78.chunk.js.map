{"version":3,"sources":["context/alertas/alertasContex.js","context/autenticacion/authContext.js","components/auth/Login.js","components/auth/NuevaCuenta.js","hooks/useUser.js","components/layout/Barra.js","context/proyectos/proyectoContex.js","context/tareas/tareaContext.js","components/proyectos/Proyecto.js","components/proyectos/ListaProyectos.js","components/proyectos/NuevoProyecto.js","components/layout/Sidebar.js","components/tareas/FormTarea.js","components/tareas/Tarea.js","components/tareas/ListadoTareas.js","components/proyectos/Proyectos.js","types/index.js","context/proyectos/proyectoReducer.js","config/axios.js","context/proyectos/proyectoState.js","context/tareas/tareaReducer.js","context/tareas/tareasState.js","context/alertas/alertasReducer.js","context/alertas/alertaState.js","context/autenticacion/authReducer.js","config/tokenAuth.js","context/autenticacion/authState.js","components/rutas/RutaPrivada.js","App.js","helpers/enviarToken.js","index.js"],"names":["AlertaContext","createContext","authContext","Login","props","alertaContext","useContext","contextoAuth","alerta","mostrarAlerta","mensaje","autenticado","inciarSesion","useEffect","history","push","msg","categoria","useState","email","password","usuario","guardarUsuario","handleChange","e","target","name","value","className","onSubmit","preventDefault","trim","htmlFor","type","id","placeholder","onChange","to","NuevaCuenta","authContex","registrarUsuario","nombre","confirmar","length","useUser","AuthContext","usuarioAutenticado","cerrarSesion","Barra","onClick","proyectoContext","tareaContext","Proyecto","proyecto","_id","proyectoActual","obtenerTareas","ListaProyectos","contexProyectos","proyectos","obtenerProyectos","TransitionGroup","map","CSSTransition","timeout","classNames","NuevoProyecto","proyectosContex","formulario","mostrarFormulario","errorFormulario","agregarProyecto","mostrarError","guardarProyecto","componente","Sidebar","FormTarea","tareaSeleccionada","agregarTarea","validarTarea","errorTarea","actualizarTarea","limpiarTarea","tareaState","guardarTareas","estado","Tarea","tarea","eliminarTarea","seleccionarTarea","handleEstado","ListadoTareas","eliminarProyecto","tareasproyecto","Proyectos","FORMULARIO_PROYECTO","OBTENER_PROYECTOS","AGREGAR_PROYECTO","VALIDAR_FORMULARIO","PROYECTO_ACTUAL","ELIMINAR_PROYECTO","PROYECTO_ERROR","OBTENER_TAREAS","AGREGAR_TAREA","VALIDAR_TAREA","ELIMINAR_TAREA","SELECCIONAR_TAREA","ACTUALIZAR_TAREA","LIMPIAR_TAREA","MOSTRAR_ALERTA","OCULTAR_ALERTA","REGISTRO_EXITOSO","REGISTRO_ERROR","OBTENER_USUARIO","LOGIN_EXITOSO","LOGIN_ERROR","CERRAR_SESION","state","action","payload","filter","clienteAxios","axios","create","baseURL","process","ProyectoState","useReducer","proyectoReducer","dispatch","a","get","data","console","log","post","resultado","delete","Provider","children","TareaState","tareaReducer","params","tareas","response","put","AlertaState","alertasReducer","setTimeout","localStorage","setItem","token","cargando","removeItem","tokenAuth","defaults","headers","common","AuthState","initialState","getItem","AuthReducer","datos","respuesta","RutaPrivada","Component","component","contexto","render","App","setToken","exact","path","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.dc1f5f78.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nexport const AlertaContext = createContext();\n","import { createContext } from \"react\";\n\nexport const authContext = createContext();\n","import React, { useContext, useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom';\nimport { AlertaContext } from \"../../context/alertas/alertasContex\";\nimport { authContext } from \"../../context/autenticacion/authContext\";\n\nexport const Login = (props) => {\n\n    //extraer los valores del contexto\n    const alertaContext = useContext(AlertaContext);\n    const contextoAuth = useContext(authContext);\n\n    const { alerta, mostrarAlerta } = alertaContext;\n    const { mensaje, autenticado, inciarSesion } = contextoAuth;\n    \n    useEffect(() => {\n        if(autenticado){\n            props.history.push('/proyectos');\n        }\n        if(mensaje){\n            mostrarAlerta(mensaje.msg , mensaje.categoria);\n        }\n        // eslint-disable-next-line\n    }, [mensaje,autenticado])\n    \n    //State para iniciar sesion\n    const [usuario, guardarUsuario] = useState({\n        email:'',\n        password:''\n    })\n\n    const { email, password } = usuario;\n\n    \n    const handleChange = ( e ) =>{\n        guardarUsuario({\n            ...usuario,\n            [ e.target.name ] : e.target.value\n        })\n    }\n\n    const handleSubmit = (e)=>{\n        e.preventDefault();\n        if(email.trim === '' || password.trim() === ''){\n            mostrarAlerta('Todos los campos son obligatorios','alerta-error');\n        } \n        inciarSesion({email,password});\n    }\n\n    return (\n        <div className='form-usuario'>\n            <div className='contenedor-form sombra-dark'>\n                <h1>Iniciar Sesión</h1>\n                <form\n                    onSubmit={handleSubmit}\n                >\n                    { \n                        alerta ? ( \n                            <div className={`alerta ${alerta.categoria}`}>{ alerta.msg }</div> \n                        ) : null \n                    }\n                <div className='campo-form'>\n                        <label htmlFor='email'>Email</label>\n                        <input\n                            type='email'\n                            id='email'\n                            name='email'\n                            placeholder='Tu email'\n                            onChange={handleChange}\n                            value={email}\n                        />\n                    </div>\n                    <div className='campo-form'>\n                        <label htmlFor='password'>Password</label>\n                        <input\n                            type='password'\n                            id='password'\n                            name='password'\n                            placeholder='Tu password'\n                            onChange={handleChange}\n                            value={password}\n                        />\n                    </div>\n                    <div className='campo-form'>\n                        <input\n                            type='submit'\n                            className='btn btn-primario btn-block'\n                            value='Iniciar Sesión'\n                        />\n                    </div>\n                </form>\n                <Link to={'/nueva-cuenta'} className='enlace-cuenta'>Obtener Cuenta</Link>\n            </div>\n        </div>\n    )\n}\n","import { useState, useContext, useEffect } from \"react\";\nimport { Link } from 'react-router-dom';\nimport { AlertaContext } from \"../../context/alertas/alertasContex\";\nimport { authContext } from \"../../context/autenticacion/authContext\";\n\n\nexport const NuevaCuenta = props => {\n\n  const alertaContext = useContext(AlertaContext);\n  const {alerta, mostrarAlerta } = alertaContext;\n\n  const authContex = useContext(authContext);\n  const { mensaje, autenticado, registrarUsuario } = authContex;\n  \n  useEffect(() => {\n    if(autenticado){\n      props.history.push('/proyectos');\n    }\n\n    if(mensaje){\n      mostrarAlerta(mensaje.msg,'alerta-error');\n    }\n    // eslint-disable-next-line\n  }, [mensaje, autenticado, props.history])\n  //State para iniciar sesion\n  const [usuario, guardarUsuario] = useState({\n    nombre:\"\",\n    email: \"\",\n    password: \"\",\n    confirmar:\"\"\n  });\n\n  const { nombre, email, password, confirmar } = usuario;\n\n  const handleChange = (e) => {\n    guardarUsuario({\n      ...usuario,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    \n    //Validad que no haya campos vacios\n    if( nombre.trim() === '' || email.trim() ==='' || password.trim() ==='' || confirmar.trim() ==='' ){\n      mostrarAlerta('Todos los campos son obligatorios','alerta-error');\n      return;\n    }\n    //Password minimo de 6 caracteres\n    if(password.length < 6){\n      mostrarAlerta('La contraseña debe contener minimo 6 caracteres','alerta-error');\n      return;\n    }\n    //Los 2 password sean iguales\n    if(password !== confirmar){\n      mostrarAlerta('La contraseña deben de ser iguales','alerta-error');\n      return;\n    }\n    //Pasarlo al action \n    registrarUsuario({\n      nombre,\n      email,\n      password\n    }); \n  };\n\n  return (\n    <div className=\"form-usuario\">\n\n      { \n      alerta ? ( \n        <div className={`alerta ${alerta.categoria}`}>{ alerta.msg }</div> \n      ) : null \n      }\n      <div className=\"contenedor-form sombra-dark\">\n        <h1>Obtener una Cuenta</h1>\n        <form onSubmit={handleSubmit}>\n          <div className=\"campo-form\">\n            <label htmlFor=\"nombre\">Nombre</label>\n            <input\n              type=\"text\"\n              id=\"nombre\"\n              name=\"nombre\"\n              placeholder=\"Tu Nombre\"\n              onChange={handleChange}\n              value={ nombre }\n            />\n          </div>\n          <div className=\"campo-form\">\n            <label htmlFor=\"email\">Email</label>\n            <input\n              type=\"email\"\n              id=\"email\"\n              name=\"email\"\n              placeholder=\"Tu email\"\n              onChange={handleChange}\n              value={ email }\n            />\n          </div>\n          <div className=\"campo-form\">\n            <label htmlFor=\"password\">Password</label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              name=\"password\"\n              placeholder=\"Tu password\"\n              onChange={handleChange}\n              value={ password }\n            />\n          </div>\n          <div className=\"campo-form\">\n            <label htmlFor=\"confirmar\">Confirmar Password</label>\n            <input\n              type=\"password\"\n              id=\"confirmar\"\n              name=\"confirmar\"\n              placeholder=\"Confirma tu password\"\n              onChange={handleChange}\n              value={ confirmar }\n            />\n          </div>\n          <div className=\"campo-form\">\n            <input\n              type=\"submit\"\n              className=\"btn btn-primario btn-block\"\n              value=\"Registrar Cuenta\"\n            />\n          </div>\n        </form>\n        <Link to={\"/\"} className=\"enlace-cuenta\">\n          Inicia Sesión\n        </Link>\n      </div>\n    </div>\n  );\n};\n","import { useContext } from 'react'\nimport { authContext } from '../context/autenticacion/authContext';\n\nconst useUser = () => {\n    const AuthContext = useContext(authContext);\n    const { usuario, usuarioAutenticado, cerrarSesion } = AuthContext;\n\n    return [ usuario, usuarioAutenticado, cerrarSesion];\n}\n\nexport default useUser;\n","import { useEffect } from 'react'\nimport useUser from '../../hooks/useUser'\n\nexport const Barra = () => {\n    const [ usuario,usuarioAutenticado, cerrarSesion ] = useUser();\n\n\n    useEffect(() => {\n        usuarioAutenticado();\n        // eslint-disable-next-line\n    }, [])\n    const handleClick = ()=>{\n        cerrarSesion();\n    }\n    return (\n        <header className='app-header'>\n            {usuario ? <p className='nombre-usuario'>Hola <span>{usuario.nombre}</span></p>  :null}\n            <nav className='nav-principal'>\n                <button\n                    className='btn btn-blank cerrar-sesion white'\n                    onClick={handleClick}\n                >Cerrar Sesion</button>\n            </nav>\n        </header>\n    )\n}\n","import { createContext } from \"react\";\n\nexport const proyectoContext = createContext();\n\n","import { createContext } from \"react\";\n\nexport const tareaContext = createContext();\n","import { useContext }from 'react'\nimport { proyectoContext } from '../../context/proyectos/proyectoContex';\nimport { tareaContext } from '../../context/tareas/tareaContext';\n\nexport const Proyecto = ({ proyecto }) => {\n    const {_id} = proyecto;\n    const { proyectoActual } = useContext(proyectoContext);\n    const { nombre } = proyecto;\n    const { obtenerTareas } =  useContext(tareaContext);\n\n    const handleClick = ()=>{\n        proyectoActual(proyecto); \n        obtenerTareas(_id);\n    }\n    return (\n        <li>\n            <button\n                onClick={handleClick}\n                type='button'\n                className='btn btn-blank'\n            >{nombre}</button>\n        </li>\n    )\n}\n","import { useContext, useEffect} from 'react'\nimport { proyectoContext } from '../../context/proyectos/proyectoContex'\nimport { Proyecto } from './Proyecto';\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport { AlertaContext } from '../../context/alertas/alertasContex';\n\nexport const ListaProyectos = () => {\n\n\n    const contexProyectos = useContext(proyectoContext)\n    const {mensaje, proyectos, obtenerProyectos } = contexProyectos;\n\n    const alertaContext = useContext(AlertaContext);\n    const { alerta, mostrarAlerta } = alertaContext;\n\n    useEffect(() => {\n\n        if(mensaje){\n            mostrarAlerta(mensaje.msg, mensaje.categoria);\n        }\n        obtenerProyectos();\n        // eslint-disable-next-line\n    }, [ mensaje ]);\n\n    //nota, antes del useEffect no debe haber  un return.\n    if(proyectos.length === 0 ) return <p>No hay proyectos, comienza creando uno</p> ;\n    return (\n        <ul className='listado-proyectos'>\n            {alerta ? (<div className={`alerta ${alerta.categoria}`}>{alerta.msg}</div>) : null}\n            <TransitionGroup>\n            {\n                proyectos.map( proyecto =>(\n                    <CSSTransition\n                        key={proyecto._id}\n                        timeout={500}\n                        classNames='proyecto'\n                    >\n                        <Proyecto\n                            proyecto={proyecto}\n                        />\n                    </CSSTransition>\n                ))\n            }\n            </TransitionGroup>\n        </ul>\n    )\n}\n","import { useContext, useState } from \"react\";\nimport { proyectoContext } from \"../../context/proyectos/proyectoContex\";\n\nexport const NuevoProyecto = () => {\n  //declaramos el context y extraemos el formulario\n  const proyectosContex = useContext(proyectoContext);\n  const { formulario, mostrarFormulario, errorFormulario , agregarProyecto, mostrarError } = proyectosContex;\n   //state para proyecto\n   const [proyecto, guardarProyecto] = useState({\n    nombre: \"\"\n  });\n\n  const { nombre } = proyecto;\n\n  //Leyendo los contenidos del input\n  const handleChange = (e) => {\n    guardarProyecto({\n      ...proyecto,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  //Cuando el usuario envie el proyecto\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if( nombre === '' ){\n      mostrarError()\n      return\n    }\n\n    agregarProyecto(proyecto);\n    guardarProyecto({ nombre:'' });\n  };\n\n  const componente = formulario ? (\n    <form className=\"formulario-nuevo-proyecto\" onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        className=\"input-text\"\n        placeholder=\"Nombre del proyecto\"\n        name=\"nombre\"\n        value={nombre}\n        onChange={handleChange}\n      />\n\n      <input\n        type=\"submit\"\n        className=\"btn btn-primario btn-block\"\n        value=\"Agregar Proyecto\"\n      />\n    </form>\n  ) : null;\n\n  \n  return (\n    <>\n      <button \n        type=\"button\"\n        className=\"btn btn-block btn-primario\"\n        onClick={mostrarFormulario}\n        >\n        Nuevo Proyecto\n      </button>\n\n      {componente}\n      { errorFormulario ? <p className='mensaje error'>EL nombre del Proyecto es obligatorio</p> : null}\n    </>\n  );\n};\n","import React from 'react'\nimport { ListaProyectos } from '../proyectos/ListaProyectos'\nimport { NuevoProyecto } from '../proyectos/NuevoProyecto'\n\nexport const Sidebar = () => {\n    return (\n        <aside>\n            <h1>MERN<span>Tasks</span></h1>\n            <NuevoProyecto/>\n            <div className=\"proyectos\">\n                <h2>Tus proyectos</h2>\n                <ListaProyectos/>\n            </div>\n        </aside>\n    )\n}\n","import { useState,useContext,useEffect } from 'react'\nimport { proyectoContext } from '../../context/proyectos/proyectoContex'\nimport { tareaContext } from '../../context/tareas/tareaContext';\nexport const FormTarea = () => {\n    \n    const { proyecto } = useContext(proyectoContext);\n    const { \n        tareaSeleccionada, \n        agregarTarea, \n        validarTarea, \n        errorTarea, \n        obtenerTareas,\n        actualizarTarea,\n        limpiarTarea\n    } = useContext(tareaContext);\n    \n    const [ tareaState, guardarTareas ] = useState('');\n    \n    useEffect(() => {\n        if(tareaSeleccionada !== null) \n            guardarTareas(tareaSeleccionada.nombre)\n        else \n            guardarTareas('');\n    }, [tareaSeleccionada]);\n\n    if(!proyecto) return null;\n    \n\n    const handleSubmit = (e)=>{\n        e.preventDefault();\n        \n        if( tareaState.trim() === '' ){\n            validarTarea()\n            return;\n        }\n\n        if(tareaSeleccionada === null){\n            agregarTarea({\n                nombre:tareaState,\n                estado:false,\n                proyecto: proyecto[0]._id,\n            });\n        }else{\n            const { estado, _id } = tareaSeleccionada\n            actualizarTarea({\n                nombre: tareaState,\n                estado,\n                proyecto,\n                _id\n            })\n            limpiarTarea();\n        }\n        obtenerTareas(proyecto[0]._id);\n        guardarTareas('');\n    }\n\n    const handleChange = (e)=>{\n        guardarTareas(e.target.value);\n    }\n    \n    return (\n        <div className='formulario'>\n            <form onSubmit={handleSubmit}>\n                <div className=\"contenedor-input\">\n                    <input \n                        type=\"text\"\n                        className='input-text'\n                        placeholder='Nombre Tarea...'\n                        name='nombre'\n                        onChange={ handleChange }\n                        value={ tareaState }\n                    />\n                </div>\n                <div className=\"contenedor-input\">\n                    <input \n                        type=\"submit\"\n                        className='btn btn-primario btn-submit btn-block'\n                        value={tareaSeleccionada ? 'Editar Tarea' : 'Agregar Tarea' }\n                    />\n                </div>\n            </form>\n            { errorTarea ? <p className=' mensaje error '>El nombre de la tarea es obligatorio</p> : null }\n        </div>\n    )\n}\n","import {useContext} from 'react'\nimport { proyectoContext } from '../../context/proyectos/proyectoContex';\nimport { tareaContext } from '../../context/tareas/tareaContext';\n\nexport const Tarea = ({ tarea }) => {\n\n    const { nombre, estado } = tarea;\n    const { eliminarTarea, obtenerTareas, actualizarTarea, seleccionarTarea  } = useContext(tareaContext);\n    const { proyecto } = useContext(proyectoContext);\n\n    const handleDelete = ()=>{\n        eliminarTarea(tarea._id,proyecto[0]._id);\n        obtenerTareas(proyecto[0]._id);\n    }\n\n    const handleEstado = estado=>{\n        tarea.estado = estado;\n        actualizarTarea(tarea);\n        obtenerTareas(proyecto[0]._id);\n    }\n    \n    const handleSeleccionar = ()=>{\n        seleccionarTarea(tarea)\n    }\n\n    return (\n        <li className='tarea sombra'>\n            <p>{nombre}</p>  \n            <div className=\"estado\">\n                {estado \n                ?\n                    (\n                        <button\n                            type='button'\n                            className='completo'\n                            onClick={ ()=> handleEstado(false) }\n                        >Completo</button>\n                    )\n                :\n                    (\n                        <button\n                            type='button'\n                            className='incompleto'\n                            onClick={ ()=> handleEstado(true) }\n                        >Incompleto</button>\n                    )   \n                }\n            </div>\n            <div className=\"acciones\">\n                <button\n                    className='btn btn-primario'\n                    onClick={ handleSeleccionar }\n                >Editar</button>\n                <button\n                    className='btn btn-secundario'\n                    onClick={ handleDelete }\n                >Eliminar</button>\n            </div>\n        </li>\n    )\n}\n","import { useContext } from \"react\"\nimport { proyectoContext } from \"../../context/proyectos/proyectoContex\"\nimport { tareaContext } from \"../../context/tareas/tareaContext\"\nimport { Tarea } from \"./Tarea\"\n\nexport const ListadoTareas = () => {\n\n    const { proyecto, eliminarProyecto } = useContext(proyectoContext)\n    const { tareasproyecto } = useContext(tareaContext);\n\n    if(!proyecto){\n        return <h1>No existen proyectos</h1>\n    }\n    const { nombre } = proyecto[0]\n\n    const handleEliminar = ()=>{\n        eliminarProyecto(proyecto[0]);\n    }\n    return (\n        <>\n            <h2>Proyecto : { nombre }</h2>\n\n            <div className=\"listado-tareas\">\n                {\n                    tareasproyecto.length === 0 \n                    ? (<p className='tarea'>No hay tareas</p>)\n                    : \n                    tareasproyecto.map(tarea=>(\n                        <Tarea key={tarea._id} tarea={tarea}/>\n                    ))\n                }\n            </div> \n            <button\n                type='button'\n                className='btn btn-eliminar'\n                onClick={ handleEliminar }\n            >Eliminar Proyecto &times;</button>\n        </>\n    )\n}\n","import { useEffect } from 'react'\nimport { Barra } from '../layout/Barra'\nimport { Sidebar } from '../layout/Sidebar'\nimport { FormTarea } from '../tareas/FormTarea'\nimport { ListadoTareas } from '../tareas/ListadoTareas'\nimport useUser from '../../hooks/useUser.js'\n\n\nexport const Proyectos = () => {\n    \n    const [ , usuarioAutenticado] = useUser();\n    useEffect(() => {\n        usuarioAutenticado();\n        // eslint-disable-next-line\n    }, [])\n    return (\n        <div className='contenedor-app'>\n            <Sidebar/>\n            <div className=\"seccion-principal\">\n                <Barra/>\n                <main>\n                    <FormTarea/>\n                    <div className=\"contenedor-tareas\">\n                        <ListadoTareas/> \n                    </div>\n                </main>\n            </div>\n        </div>\n    )\n}\n","//acciones proyecto\nexport const FORMULARIO_PROYECTO = 'FORMULARIO_PROYECTO'; \nexport const OBTENER_PROYECTOS = 'OBTENER_PROYECTOS'; \nexport const AGREGAR_PROYECTO = 'AGREGAR_PROYECTO'; \nexport const VALIDAR_FORMULARIO = 'VALIDAR_FORMULARIO';\nexport const PROYECTO_ACTUAL = 'PROYECTO_ACTUAL';\nexport const ELIMINAR_PROYECTO = 'ELIMINAR_PROYECTO';\nexport const PROYECTO_ERROR = 'PROYECTO_ERROR';\n\n//acciones tareas\nexport const OBTENER_TAREAS = 'OBTENER_TAREA';\nexport const AGREGAR_TAREA = 'AGREGAR_TAREA';\nexport const VALIDAR_TAREA = 'VALIDAR_TAREA';\nexport const ELIMINAR_TAREA = 'ELIMINAR_TAREA';\nexport const ESTADO_TAREA = 'ESTADO_TAREA';\nexport const SELECCIONAR_TAREA = 'SELECCIONAR_TAREA';\nexport const ACTUALIZAR_TAREA = 'ACTUALIZAR_TAREA';\nexport const LIMPIAR_TAREA = 'LIMPIAR_TAREA';\n\nexport const MOSTRAR_ALERTA = 'MOSTRAR_ALERTA';\nexport const OCULTAR_ALERTA = 'OCULTAR_ALERTA';\n\nexport const REGISTRO_EXITOSO = 'REGISTRO_EXITOSO';\nexport const REGISTRO_ERROR = 'REGISTRO_ERROR';\nexport const OBTENER_USUARIO = 'OBTENER_USUARIO';\nexport const LOGIN_EXITOSO = 'LOGIN_EXITOSO';\nexport const LOGIN_ERROR = 'LOGIN_ERROR';\nexport const CERRAR_SESION = 'CERRAR_SESION';\n\n","import { \n    AGREGAR_PROYECTO,\n    ELIMINAR_PROYECTO,\n    FORMULARIO_PROYECTO,\n    OBTENER_PROYECTOS, \n    PROYECTO_ACTUAL, \n    PROYECTO_ERROR,\n    VALIDAR_FORMULARIO \n} from \"../../types\";\n\n// eslint-disable-next-line\nexport default ( state, action )=>{\n    switch(action.type){\n        case FORMULARIO_PROYECTO:\n            return{\n                ...state,\n                formulario:true\n            }\n        case OBTENER_PROYECTOS:\n            return{\n                ...state,\n                proyectos:action.payload\n            }\n        case AGREGAR_PROYECTO:\n            return{\n                formulario: false,\n                proyectos:[...state.proyectos,action.payload],\n                errorFormulario:false\n            }\n        case VALIDAR_FORMULARIO:\n            return{\n                ...state,\n                errorFormulario : true\n            }\n        case PROYECTO_ACTUAL:\n            return{\n                ...state,\n                proyecto: state.proyectos.filter(proyecto => proyecto._id === action.payload._id)\n            }\n        case ELIMINAR_PROYECTO:\n            return{ \n                ...state,\n                proyectos: state.proyectos.filter(proyecto => proyecto._id !== action.payload._id),\n                proyecto:null\n            }\n        case PROYECTO_ERROR:\n            return{\n                ...state,\n                mensaje:action.payload\n            }\n        default:\n            return state;\n    }\n}","import axios from \"axios\";\n\n//creamos una configuracion por default de axios con una url base\nconst clienteAxios = axios.create({\n    baseURL:process.env.REACT_APP_BACKEND_URL    \n});\n\nexport default clienteAxios;","import { useReducer } from \"react\";\nimport { proyectoContext } from \"./proyectoContex\";\nimport proyectoReducer from \"./proyectoReducer\";\nimport clienteAxios from '../../config/axios';\nimport {\n  AGREGAR_PROYECTO,\n  FORMULARIO_PROYECTO,\n  OBTENER_PROYECTOS,\n  PROYECTO_ERROR,\n  VALIDAR_FORMULARIO,\n  PROYECTO_ACTUAL, \n  ELIMINAR_PROYECTO\n} from \"../../types\";\n\nexport const ProyectoState = (props) => {\n  \n  const initialState = {\n    proyectos: [],\n    formulario: false,\n    errorFormulario : false,\n    proyecto : null,\n    mensaje:null\n  };\n\n  //dispatch para ejecutar las acciones\n  const [state, dispatch] = useReducer(proyectoReducer, initialState);\n\n  //Serie de funciones para el CRUD\n  const mostrarFormulario = () => {\n    dispatch({\n      type: FORMULARIO_PROYECTO,\n    });\n  };\n\n  const obtenerProyectos = async () => {\n    try{\n      const proyectos = await clienteAxios.get('/api/proyectos')\n      dispatch({\n         type: OBTENER_PROYECTOS,\n         payload: proyectos.data,\n      });\n    }catch(error){\n      console.log(error);\n    }\n  };\n\n  const agregarProyecto = async (proyecto) => {\n    try {\n      const resultado = await clienteAxios.post('/api/proyectos',proyecto);\n      dispatch({\n        type:AGREGAR_PROYECTO,\n        payload: resultado.data\n      })\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const mostrarError = () =>{\n      dispatch({\n          type: VALIDAR_FORMULARIO\n      })\n  }\n  const proyectoActual = proyecto =>{\n    dispatch({\n      type: PROYECTO_ACTUAL,\n      payload: proyecto \n    })\n  }\n\n  const eliminarProyecto = async proyecto =>{\n    try{\n      await clienteAxios.delete(`/api/proyectos/${proyecto._id}`);\n      dispatch({\n        type: ELIMINAR_PROYECTO,\n        payload:proyecto\n      })\n    }catch(error){\n      console.log('Hubo un error');\n      const alerta = {\n        msg: 'Hubo un error',\n        categoria:'alerta-error'\n      }\n      dispatch({\n        type:PROYECTO_ERROR,\n        payload:alerta\n      })\n    }\n  }\n  return (\n    <proyectoContext.Provider\n      value={{\n        proyectos : state.proyectos,\n        proyecto : state.proyecto,\n        formulario : state.formulario,\n        errorFormulario : state.errorFormulario,\n        mensaje: state.mensaje,\n        mostrarFormulario,\n        obtenerProyectos,\n        agregarProyecto,\n        mostrarError,\n        proyectoActual,\n        eliminarProyecto\n      }}\n    >\n      {props.children}\n    </proyectoContext.Provider>\n  );\n};\n","import { \n    ACTUALIZAR_TAREA,\n    AGREGAR_TAREA, \n    ELIMINAR_TAREA,  \n    LIMPIAR_TAREA, \n    OBTENER_TAREAS, \n    SELECCIONAR_TAREA, \n    VALIDAR_TAREA \n} from \"../../types\";\n\n// eslint-disable-next-line \nexport default ( state, action )=>{\n    switch(action.type){\n        case OBTENER_TAREAS:\n            return{\n                ...state,\n                tareasproyecto: action.payload\n            }\n        case AGREGAR_TAREA:\n            return{\n                ...state,\n                tareasproyecto:[action.payload,...state.tareasproyecto],\n                errorTarea:false\n            }\n        case VALIDAR_TAREA:\n            return{\n                ...state,\n                errorTarea:true\n            }\n        case ELIMINAR_TAREA:\n            return{\n                ...state,\n                tareasproyecto: state.tareasproyecto.filter( tarea => tarea._id !== action.payload)\n            }\n        case ACTUALIZAR_TAREA:\n            return{\n                ...state,\n                tareasproyecto: state.tareasproyecto.map(tarea => tarea._id === action.payload._id ? action.payload : tarea),\n            }\n        case SELECCIONAR_TAREA:\n            return{\n                ...state,\n                tareaSeleccionada : action.payload\n            }\n        case LIMPIAR_TAREA:\n            return{\n                ...state,\n                tareaSeleccionada: null\n            }\n        default:\n            return state;\n    }\n}\n"," import { useReducer } from 'react';\nimport { tareaContext } from '../../context/tareas/tareaContext';\nimport { \n    ACTUALIZAR_TAREA,\n    AGREGAR_TAREA, \n    ELIMINAR_TAREA, \n    LIMPIAR_TAREA, \n    OBTENER_TAREAS, \n    SELECCIONAR_TAREA, \n    VALIDAR_TAREA \n} from '../../types';\nimport tareaReducer from './tareaReducer';\nimport clienteAxios from '../../config/axios';\n\nexport const TareaState = (props)=>{\n\n    const initialState = {\n        tareasproyecto: [],\n        errorTarea : false,\n        tareaSeleccionada : null,\n    }\n    //extraemos el reducer y el dispatch para poder hacer uso de las funciones\n    const [ state, dispatch ] = useReducer(tareaReducer,initialState);\n\n    //obtener las tareas de un pr,oyecto\n    const obtenerTareas = async proyecto => {\n        try {\n            const resultado = await clienteAxios.get('/api/tareas/',{ params: { proyecto } });\n            dispatch({\n                type: OBTENER_TAREAS,\n                payload: resultado.data.tareas\n            });\n        } catch (error) {\n            console.log(error.response);\n        }\n    }\n\n    const agregarTarea = async tarea =>{\n        try {\n            await clienteAxios.post('/api/tareas',tarea);\n            dispatch({\n                type: AGREGAR_TAREA,\n                payload:tarea,\n                errorTarea:false,\n            });   \n        } catch (error) {\n            console.log(error.response);\n        }\n    }\n\n    const validarTarea = ()=>{\n        dispatch({\n            type : VALIDAR_TAREA\n        })\n    }\n\n    const eliminarTarea = async (tarea, proyecto)=>{\n        try {\n            await clienteAxios.delete(`/api/tareas/${tarea}`,{ params: { proyecto }});\n            dispatch({\n                type: ELIMINAR_TAREA,\n                payload: tarea\n            })\n        } catch (error) {\n            console.log(error.response);\n        }\n    }\n\n    // const modificarEstado = (tarea)=>{\n    //     dispatch({\n    //         type: ESTADO_TAREA,\n    //         payload : tarea\n    //     })\n    // }\n\n    const seleccionarTarea = (tarea)=>{\n        dispatch({\n            type: SELECCIONAR_TAREA,\n            payload: tarea\n        })\n    }\n\n    const actualizarTarea = async tarea =>{\n        try {\n            const resultado = await clienteAxios.put(`/api/tareas/${tarea._id}`,tarea);\n            dispatch({\n                type: ACTUALIZAR_TAREA,\n                payload: resultado.data.tarea\n            })\n        } catch (error) {\n            console.log(error.response) ;\n        }\n    }\n\n    const limpiarTarea = ()=>{\n        dispatch({\n            type: LIMPIAR_TAREA\n        })\n    }\n    return (\n\n        <tareaContext.Provider\n            value={{\n                tareasproyecto : state.tareasproyecto,\n                errorTarea : state.errorTarea,\n                tareaSeleccionada:state.tareaSeleccionada,\n                obtenerTareas,\n                agregarTarea,\n                validarTarea,\n                eliminarTarea,\n                //modificarEstado,\n                seleccionarTarea,\n                actualizarTarea,\n                limpiarTarea\n            }}\n        >\n            {props.children}\n        </tareaContext.Provider>\n    )\n}","import { MOSTRAR_ALERTA, OCULTAR_ALERTA } from \"../../types\";\n\n// eslint-disable-next-line \nexport default ( state , action )=>{\n    switch(action.type){\n        case MOSTRAR_ALERTA:\n            return{\n                alerta: action.payload\n            }\n        case OCULTAR_ALERTA :\n            return{\n                alerta:null\n            }        \n        default :\n            return state;\n    }\n}","import { useReducer } from \"react\";\nimport { MOSTRAR_ALERTA, OCULTAR_ALERTA } from \"../../types\";\nimport { AlertaContext } from \"./alertasContex\";\nimport alertasReducer from \"./alertasReducer\";\n\nexport const AlertaState = (props) => {\n  const initialState = {\n    alerta: null,\n  };\n\n  const [state, dispatch] = useReducer(alertasReducer, initialState);\n\n  const mostrarAlerta = (msg, categoria) =>{\n    dispatch({\n      type: MOSTRAR_ALERTA,\n      payload: {\n        msg,\n        categoria,\n      }\n    });\n    setTimeout(()=>{\n      dispatch({\n        type: OCULTAR_ALERTA,\n      });\n    },3000);\n  };\n\n  return (\n    <AlertaContext.Provider\n      value={{\n        alerta: state.alerta,\n        mostrarAlerta,\n      }}\n    >\n      {props.children}\n    </AlertaContext.Provider>\n  );\n};\n","import {\n  REGISTRO_EXITOSO,\n  REGISTRO_ERROR,\n  OBTENER_USUARIO,\n  LOGIN_EXITOSO,\n  LOGIN_ERROR,\n  CERRAR_SESION,\n} from \"../../types\";\n// eslint-disable-next-line \nexport default (state, action) => {\n  switch (action.type) {\n    case REGISTRO_EXITOSO:\n    case LOGIN_EXITOSO:\n      localStorage.setItem('token',action.payload.token);\n      return {\n        ...state,\n        autenticado: true,\n        mensaje:null,\n        cargando: false\n      };\n    case CERRAR_SESION:\n    case LOGIN_ERROR:\n    case REGISTRO_ERROR:\n      localStorage.removeItem('token');\n      return {\n        ...state,\n        usuario:null,\n        token:null,\n        autenticado:null,\n        mensaje: action.payload,\n        cargando:false\n      };\n    case OBTENER_USUARIO:\n      return {\n        ...state,\n        autenticado:true,\n        usuario: action.payload,\n        cargando:false\n      };\n    default:\n      return state;\n  }\n};\n","import clienteAxios  from \"./axios\";\n\nexport const tokenAuth = token =>{\n    if(token){\n        clienteAxios.defaults.headers.common['x-auth-token'] = token; //le asignamos el token que esta recibiendo por parametros.\n    }else{\n        delete clienteAxios.defaults.headers.common('x-auth-token');\n    }\n}","import { useReducer } from \"react\";\nimport { \n    REGISTRO_EXITOSO,\n    REGISTRO_ERROR,\n    OBTENER_USUARIO,\n    LOGIN_EXITOSO,\n    LOGIN_ERROR,\n    CERRAR_SESION\n    \n} from \"../../types\";\nimport { authContext } from \"./authContext\";\nimport AuthReducer from \"./authReducer\";\nimport clienteAxios from \"../../config/axios\";\nimport { tokenAuth } from \"../../config/tokenAuth\";\n\nexport const AuthState = props =>{\n    const initialState = {\n        token: localStorage.getItem('token'),\n        autenticado: null,\n        usuario:null,\n        mensaje:null,\n        cargando:true\n    }\n\n    const [state,dispatch ] = useReducer(AuthReducer, initialState); \n\n    //funciones.\n    const registrarUsuario = async datos =>{\n        try {\n           const respuesta = await clienteAxios.post('/api/usuarios',datos);\n           dispatch({\n               type:REGISTRO_EXITOSO,\n               payload: respuesta.data\n           });\n           usuarioAutenticado();\n        } catch (error) {\n            const alerta = {\n                msg:error.response.data.msg,\n                categoria: 'alerta-error'\n            }\n            dispatch({\n                type:REGISTRO_ERROR,\n                payload: alerta\n            })\n        }\n    }\n\n    //retorna el usuario autenticado\n    const usuarioAutenticado = async ()=>{\n        const token = localStorage.getItem('token');\n        if(token){\n            //TODO: Funcion para enviar el token por header.\n            tokenAuth(token);\n        }\n        try {\n            const respuesta = await clienteAxios.get('/api/auth')\n            dispatch({\n                type:OBTENER_USUARIO,\n                payload: respuesta.data.usuario\n            });\n        } catch (error) {\n            console.log(error.response);\n            dispatch({\n                type:LOGIN_ERROR\n            })\n        }\n    }\n\n    //cuando el usuario inicia sesion.\n    const inciarSesion = async datos =>{\n        try {\n            const respuesta = await clienteAxios.post('/api/auth',datos);\n\n            dispatch({\n                type:LOGIN_EXITOSO,\n                payload: respuesta.data \n            });\n            //obtenemos el usuario autenticado  \n            usuarioAutenticado()\n        } catch (error) {\n            console.log(error.response);\n            const alerta = {\n                msg:error.response.data.msg,\n                categoria: 'alerta-error'\n            }\n            dispatch({\n                type:LOGIN_ERROR,\n                payload: alerta\n            })\n        }\n    }\n\n    //cierra la sesion del usuario\n    const cerrarSesion = ()=>{\n        dispatch({\n            type: CERRAR_SESION\n        })\n    }\n    return(\n        <authContext.Provider\n            value={{\n                token:state.token,\n                autenticado:state.autenticado,\n                usuario:state.usuario,\n                mensaje:state.mensaje,\n                cargando: state.cargando,\n                registrarUsuario,\n                inciarSesion,\n                usuarioAutenticado,\n                cerrarSesion\n            }}\n        >{props.children}\n        </authContext.Provider>\n    );\n}\n","import { useContext, useEffect } from 'react'\nimport { Route, Redirect } from 'react-router-dom';\nimport { authContext } from '../../context/autenticacion/authContext';\n\nexport const RutaPrivada = ({component: Component, ...props }) => {\n    \n    const contexto = useContext(authContext);\n    const { autenticado, cargando, usuarioAutenticado  } = contexto;\n\n    useEffect(()=>{\n        usuarioAutenticado();\n        // eslint-disable-next-line\n    },[]);\n    return (\n        <Route { ...props } render={ props=> !autenticado && !cargando ? \n            ( \n                <Redirect to='/' />\n            ) : \n            (\n                 <Component { ...props } /> \n            ) \n        } />\n    )\n}\n","import './index.css';\nimport React from 'react'\nimport { \n    BrowserRouter as Router,\n    Switch,\n    Route\n} from 'react-router-dom';\n\nimport { Login } from './components/auth/Login';\nimport { NuevaCuenta } from './components/auth/NuevaCuenta';\nimport { Proyectos } from './components/proyectos/Proyectos';\n\nimport { ProyectoState } from './context/proyectos/proyectoState';\nimport { TareaState } from './context/tareas/tareasState';\nimport { AlertaState } from './context/alertas/alertaState';\nimport { AuthState } from './context/autenticacion/authState';\nimport { setToken } from './helpers/enviarToken';\nimport { RutaPrivada } from './components/rutas/RutaPrivada';\n\n\n\nexport const App = () => {\n    \n    setToken(); //si existe un token en el localStorage lo enviamos al header\n\n    return (\n        <ProyectoState>\n            <TareaState>\n                <AlertaState>\n                    <AuthState>\n                        <Router>\n                            <Switch>\n                                <Route exact path='/' component={Login}/>\n                                <Route exact path='/nueva-cuenta' component={NuevaCuenta}/>\n                                <RutaPrivada exact path='/proyectos' component={Proyectos}/>\n                            </Switch>\n                        </Router>\n                    </AuthState>\n                </AlertaState>\n            </TareaState>\n        </ProyectoState>\n    )\n}\n","import { tokenAuth } from \"../config/tokenAuth\";\n\n\nexport const setToken = ()=>{\n    const token = localStorage.getItem('token');\n    if(token){\n        tokenAuth(token);\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}